<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: [OrderBot] Syrcus Tower
  Authors: Antony_256, DomesticWarlord86
-->
<Profile>
	<Name>[OrderBot] Syrcus_Tower</Name>
	<Author>Antony_256, DomesticWarlord86</Author>
	<Order>
	<RunCode name="PluginLoad"/>
			<While condition="not DutyManager.InInstance">
				<LLJoinDuty DutyId="102" Undersized="False" Raid="True"/>
			</While>
			<If Condition="IsOnMap(372)">

				<If Condition="GetInstanceTodo(2) == 0">
					<Log Message="Clear the Ladder of Ascension 0/1" />
					
					<MoveTo Name="Boss Arena 1" XYZ="-0.8759959, -700, 62.71616" Distance="1" />
					<Grind GrindRef="Yellow Dragon" While="GetInstanceTodo(2) == 0" />
					<MoveTo XYZ="36.59584, -682.3271, -34.34914" />
					<LLChangeZone Heading="1.693069"/>					
				</If>

				<If Condition="GetInstanceTodo(2) == 1 and GetInstanceTodo(3) == 0">
					<Log Message="Defeat Scylla" />
					<If condition="GameObjectManager.GetObjectByNPCId(2004154)">
						<RunCode name="Allagan Teleporter"/>
					</If>					
					<Grind GrindRef="Scylla" While="GetInstanceTodo(3) == 0" />
					
					<MoveTo XYZ="-0.1552268, -589.46, -222.2895" usemesh="false" />
					
					<MoveTo XYZ="-0.1741263, -581.6946, -252.3315" usemesh="false" />
					<LLChangeZone Heading="3.156204"/>					
				</If>
				
				<If Condition="GetInstanceTodo(3) == 1 and GetInstanceTodo(4) == 0">
					<Log Message="Clear the Braid" />
					
					<MoveTo XYZ="23.1056, -400, -200.1003" />
					<Grind GrindRef="Green Dragon" While="GetInstanceTodo(4) == 0" />
					
					<MoveTo XYZ="-69.1171, -395.2811, -215.37" />
					<LLChangeZone Heading="3.067017"/>	
					<MoveTo Name="Jumppad" XYZ="4.952466, -4, -135.4132" />
					<RunCode Name="Jumppad"/>					
				</If>			

				<If Condition="GetInstanceTodo(4) == 1 and GetInstanceTodo(5) == 0">
					<Log Message="Defeat Glasya Labolas 0/1" />
					<If condition="GameObjectManager.GetObjectByNPCId(2004154)">
						<RunCode name="Allagan Teleporter"/>
					</If>
					<Grind GrindRef="Glasya Labolas" While="GetInstanceTodo(5) == 0" />
					<MoveTo XYZ="-13.77971, 4.375302, -266.6036" />
					<LLChangeZone Heading="4.825583"/>
				</If>

				<If Condition="GetInstanceTodo(5) == 1 and GetInstanceTodo(6) == 0">
					<Log Message="Defeat the Golden Sacristy 0/1" />
					<If condition="GameObjectManager.GetObjectByNPCId(2004154)">
						<RunCode name="Allagan Teleporter"/>
					</If>
					
					<MoveTo XYZ="-0.04082332, 200, -222.5494" />
					<Grind GrindRef="Red Dragon" PostCombatDelay="3.0" While="GetInstanceTodo(6) == 0" />
					
					<MoveTo XYZ="-16.32521, 204.8967, -132.3171" />
					<LLChangeZone Heading="4.674441"/>
				</If>
				
				<If Condition="GetInstanceTodo(6) == 1 and GetInstanceTodo(7) == 0">
					<Log Message="Defeat Amon 0/1" />
					<If condition="GameObjectManager.GetObjectByNPCId(2004154)">
						<RunCode name="Allagan Teleporter"/>
					</If>					
					
					<MoveTo XYZ="12.27859, 600, -179.0363" />
					<Grind GrindRef="Amon" While="GetInstanceTodo(7) == 0" />	
					
					<MoveTo XYZ="-59.21965, 602.7, -199.7233" />
					<LLChangeZone Heading="4.773327"/>
				</If>

				<If Condition="GetInstanceTodo(7) == 1 and GetInstanceTodo(8) == 0">
					<Log Message="Defeat Xande 0/1" />
					
					<MoveTo XYZ="-374.567, 500.0322, -200.096" />
					<Grind GrindRef="Xande" PostCombatDelay="3.0" While="GetInstanceTodo(8) == 0" /> 
				</If>
				
				<If Condition="GetInstanceTodo(8) == 1">
					<WaitTimer WaitTime="5" />
					<LLLeaveDuty/>
				</If>	
			</If>

	</Order>
	<GrindAreas>
		<GrindArea Name="Yellow Dragon">
			<Hotspots>
				<Hotspot XYZ="0.07623291, -700, 40.11597" Radius="120" />
			</Hotspots>
			<TargetMobs>
				<TargetMob Id="2800" Weight="1"/> <!-- Oceanus -->		
				<TargetMob Id="2799" Weight="1"/> <!-- Yellow Dragon -->
				<TargetMob Id="2802" Weight="1"/> <!-- Kunoichi -->
				<TargetMob Id="2801" Weight="1"/> <!-- Dark General -->
				<TargetMob Id="2803" Weight="1"/> <!-- Shinobi -->
			</TargetMobs>
		</GrindArea>
		<GrindArea Name="Scylla">
			<Hotspots>
				<Hotspot XYZ="0.1983643, -590, -192.1569" Radius="120" />
			</Hotspots>
			<TargetMobs>
				<TargetMob Id="2809" Weight="1"/> <!-- Scylla -->
				<TargetMob Id="2808" Weight="1"/> <!-- Staff of Eldering -->
			</TargetMobs>
		</GrindArea>
		<GrindArea Name="Green Dragon">
			<Hotspots>
				<Hotspot XYZ="23.1056, -400, -200.1003" Radius="120" />
			</Hotspots>
			<TargetMobs>
				<TargetMob Id="2796" Weight="1"/> <!-- Gomory -->
				<TargetMob Id="2795" Weight="1"/> <!-- Acheron -->			
				<TargetMob Id="2793" Weight="1"/> <!-- Unei's Clone -->
				<TargetMob Id="2794" Weight="1"/> <!-- Doga's Clone -->
				<TargetMob Id="2798" Weight="1"/> <!-- Green Dragon -->
			</TargetMobs>
		</GrindArea>
		<GrindArea Name="Glasya Labolas">
			<Hotspots>
				<Hotspot XYZ="-0.03659993, -200, -460.0256" Radius="120" />
			</Hotspots>
			<TargetMobs>
				<TargetMob Id="2815" Weight="10"/> <!-- Glasya Labolas -->
				<TargetMob Id="2813" Weight="1"/> <!-- Clockwork Wright -->
			</TargetMobs>
		</GrindArea>
		<GrindArea Name="Red Dragon">
			<Hotspots>
				<Hotspot XYZ="-0.04082332, 200, -222.5494" Radius="120" />
			</Hotspots>
			<TargetMobs>
				<TargetMob Id="2792" Weight="1"/> <!-- Azer -->
				<TargetMob Id="2797" Weight="1"/> <!-- Red Dragon -->
				<TargetMob Id="2791" Weight="1"/> <!-- Haokah -->
			</TargetMobs>
		</GrindArea>
		<GrindArea Name="Amon">
			<Hotspots>
				<Hotspot XYZ="2.609253, 600, -199.7254" Radius="120" />
			</Hotspots>
			<TargetMobs>
				<TargetMob Id="2821" Weight="1"/> <!-- Amon -->
				<TargetMob Id="2817" Weight="10"/> <!-- Experimental By-product #66 -->
				<TargetMob Id="2818" Weight="10"/> <!-- Experimental By-product #33 -->
				<TargetMob Id="2886" Weight="1"/> <!-- Kum Kum -->
				<TargetMob Id="2826" Weight="1"/> <!-- Kichiknebik -->
			</TargetMobs>
		</GrindArea>
		<GrindArea Name="Xande">
			<Hotspots>
				<Hotspot XYZ="-392.6299, 500, -200.5189" Radius="120" />
			</Hotspots>
			<TargetMobs>
				<TargetMob Id="2824" Weight="1"/> <!-- Xande -->			
				<TargetMob Id="2823" Weight="100"/> <!-- Starfall Circle -->
				<TargetMob Id="2822" Weight="1"/> <!-- Stonefall Circle -->				
			</TargetMobs>
		</GrindArea>
	</GrindAreas>
	<CodeChunks>
	 <CodeChunk name="PluginLoad">
      <![CDATA[
        var Plugin = PluginManager.Plugins.Where(p => p.Plugin.Name == "DungeonAssist");
        var Plugin2 = PluginManager.Plugins.Where(p => p.Plugin.Name == "Osiris");
		var Plugin3 = PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep");
		
	
		
		var text1 = string.Empty;
        var text2 = string.Empty;
		var text3 = string.Empty;
        var text4 = string.Empty;
		var text5 = string.Empty;
        var text6 = string.Empty;
		
		
		text1 = "Plug-In Dungeon Assist is installed and enabled";
		text2 = "You Need the Dungeon Assist Plug-In to Operate this Profile";
		text3 = "Plug-In Osiris  is installed and enabled";
		text4 = "You Need the Osiris Plug-In to Operate this Profile";
		text5 = "Plug-In SideStep  is installed and enabled";
		text6 = "You Need the SideStep Plug-In to Operate this Profile";
		
					
			if(Plugin.Any()){
				
				if (Plugin != null)
				{
					PluginManager.SetEnabledPlugins("DungeonAssist");
					Core.OverlayManager.AddToast(() => text1, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
					
				}
				else
				{
					Core.OverlayManager.AddToast(() => text2, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			}
			else
				{
					Core.OverlayManager.AddToast(() => text2, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			if(Plugin2.Any()){
				
				if (Plugin2 != null)
				{
					PluginManager.SetEnabledPlugins("Osiris");
					Core.OverlayManager.AddToast(() => text3, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
				else
				{
					Core.OverlayManager.AddToast(() => text4, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			}
				else
				{
					Core.OverlayManager.AddToast(() => text4, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			if(Plugin3.Any()){
				
				if (Plugin3 != null)
				{
					PluginManager.SetEnabledPlugins("SideStep");
					Core.OverlayManager.AddToast(() => text5, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
					
				}
				else
				{
					Core.OverlayManager.AddToast(() => text6, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			}
		else
				{
					Core.OverlayManager.AddToast(() => text6, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
        await Coroutine.Sleep(6000);
      ]]>	
		</CodeChunk>
		<!--CodeChunk Name="CurtainCall">
			<![CDATA[
				Poi.Clear("Ice cage spawned");
				Core.Me.ClearTarget();			
				   var text3 = string.Empty;
					var text4 = string.Empty;
        
				#if RB_CN
						text3 = "近战如果打不到BOSS,另一个DPS带琳,添加吃食物,在DungeonAssist设置里设置食物";
						text4 = "你必须在Plugins文件夹里存在DungeonAssist/亲信战友的插件";
				#else
						text3 = "Curtain Call Time!";
						text4 = "This profile will not work without the DungeonAssist plugin being installed, and enabled.";
				#endif

						Core.OverlayManager.AddToast(() => text3, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
						await Coroutine.Sleep(6000);
								
				while (Core.Me.Location.Distance2D(PartyManager.PartyLeader.BattleCharacter.Location) > 0.5)
				{
				  MovementManager.SetFacing(PartyManager.PartyLeader.BattleCharacter.Location);
				  MovementManager.MoveForwardStart();
				  await Coroutine.Sleep(100);
				  MovementManager.MoveStop();
				}
				await Coroutine.Sleep(1000);
			]]>
		</CodeChunk-->
		<!--CodeChunk Name="AncientQuaga">
			<![CDATA[
				Poi.Clear("Ancient Quaga, Get to Leader");
				Core.Me.ClearTarget();			
				while (Core.Me.Location.Distance2D(PartyManager.PartyLeader.BattleCharacter.Location) > 0.5)
				{
				  MovementManager.SetFacing(PartyManager.PartyLeader.BattleCharacter.Location);
				  MovementManager.MoveForwardStart();
				  await Coroutine.Sleep(100);
				  MovementManager.MoveStop();
				}
				await Coroutine.Sleep(1000);
			]]>
		</CodeChunk-->
		<CodeChunk Name="Jumppad">
			<![CDATA[
				Core.Me.SetFacing(4.691895f);
				MovementManager.MoveForwardStart();
				await Coroutine.Sleep(1500);
				Navigator.PlayerMover.MoveStop();
			]]>
		</CodeChunk>
		<CodeChunk Name="Allagan Teleporter">
			<![CDATA[
				var npcId = GameObjectManager.GetObjectByNPCId(2002941);

				if (!npcId.IsWithinInteractRange)
				
					{
						var _target = npcId.Location;
						Navigator.PlayerMover.MoveTowards(_target);
						while (_target.Distance2D(Core.Me.Location) >= 4)
							{
								Navigator.PlayerMover.MoveTowards(_target);
								await Coroutine.Sleep(100);
							}
						Navigator.PlayerMover.MoveStop();
					}
							
				npcId.Interact();			

				await Coroutine.Wait(5000, () => SelectYesno.IsOpen);
				if (ff14bot.RemoteWindows.SelectYesno.IsOpen)
				{
					Logging.WriteDiagnostic("Selecting Yes.");
					ff14bot.RemoteWindows.SelectYesno.ClickYes();
					await Coroutine.Sleep(500);
				}
				
				await Coroutine.Wait(5000, () => CommonBehaviors.IsLoading);
                while (CommonBehaviors.IsLoading)
                {
                    Logging.WriteDiagnostic("Waiting for loading...");
					await Coroutine.Yield();
                }
		  ]]>
		</CodeChunk>		
	</CodeChunks>
</Profile>
